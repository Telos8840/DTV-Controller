<Application x:Class="RCS.DTV.RZC.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:converters="clr-namespace:RCS.DTV.RZC.Converters"
             xmlns:Borders="clr-namespace:ToggleSwitch.Borders;assembly=ToggleSwitch"
             Startup="StartupHandler"
             Exit="Application_Exit">
    
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Elysium;component/Themes/Generic.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
                <ResourceDictionary Source="/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <vm:ViewModelLocator xmlns:vm="clr-namespace:RCS.DTV.RZC" x:Key="Locator" />
            <converters:PathToLogoConverter x:Key="PathToLogoConverter" />
            <converters:PathToImageConverter x:Key="PathToImageConverter" />
            <converters:TeamLogoImgConverter x:Key="TeamLogoImgConverter"/>
            <converters:WeatherLogoConverter x:Key="WeatherLogoConverter"/>
            <Style TargetType="{x:Type Window}">
                <Setter Property="FontFamily" Value="Resources\GOTHMMED.ttf" />
            </Style>

            <ControlTemplate
                 xmlns:Borders="clr-namespace:ToggleSwitch.Borders;assembly=ToggleSwitch" x:Key="GroovedThumbTemplate" TargetType="Thumb">
                <Grid Background="Transparent">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.25" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unfocused"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Unchecked"/>
                            <VisualState x:Name="Checked"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Borders:OuterGlowBorder OuterGlowSize="4" OuterGlowOpacity="0.15" BorderThickness="0" OuterGlowColor="Black" Background="Transparent" CornerRadius="4" ShadowCornerRadius="8" IsTabStop="False" >
                        <Grid>
                            <Borders:ClippingBorder x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" IsTabStop="False" Background="White">
                                <Border BorderBrush="#FFEBEBEB" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Padding="6">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Rectangle Fill="#7F969696" Width="1" StrokeThickness="0"/>
                                        <Rectangle Fill="#7FF8F8F8" Width="1" StrokeThickness="0" Margin="0,0,1,0" />
                                        <Rectangle Fill="#7F969696" Width="1" StrokeThickness="0" />
                                        <Rectangle Fill="#7FF8F8F8" Width="1" StrokeThickness="0" Margin="0,0,1,0"/>
                                        <Rectangle Fill="#7F969696" Width="1" StrokeThickness="0" />
                                        <Rectangle Fill="#7FF8F8F8" Width="1" StrokeThickness="0" />
                                    </StackPanel>
                                </Border>
                            </Borders:ClippingBorder>
                            <Borders:ClippingBorder x:Name="BackgroundAnimation" Background="Black" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Black" CornerRadius="4" IsTabStop="False"/>
                            <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="false" Opacity="0" RadiusY="4" RadiusX="4"/>
                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="4" RadiusX="4" StrokeThickness="1"/>
                        </Grid>
                    </Borders:OuterGlowBorder>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="RestartThumbTemplate" TargetType="Thumb">
                <Grid Background="Transparent">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.25" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.05" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unfocused"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Unchecked"/>
                            <VisualState x:Name="Checked">
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="LoadingGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                        <LinearDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <LinearDoubleKeyFrame KeyTime="00:00:01" Value="359"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoadingGrid">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Borders:OuterGlowBorder OuterGlowSize="4" OuterGlowOpacity="0.15" BorderThickness="0" OuterGlowColor="Black" Background="Transparent" CornerRadius="4" ShadowCornerRadius="8" IsTabStop="False" >
                        <Grid>
                            <Borders:ClippingBorder x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" IsTabStop="False" Background="White">
                                <Border BorderBrush="#FFEBEBEB" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid>
                                        <Path x:Name="path" Data="M3.6,2.6 L10,2.6 L10,6.6 L3.6,6.6 z M10,0 L15.5,4.6 L10,9.4 z" Fill="#AA767676" Stretch="Fill" StrokeThickness="0" Margin="7,5" />
                                        <StackPanel x:Name="LoadingGrid" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed">
                                            <StackPanel.RenderTransform>
                                                <RotateTransform/>
                                            </StackPanel.RenderTransform>
                                            <Path Data="F1 M 10,3 C 6,3 3,6 3,10 L 0,10 C 0,4.5 4.5,0 10,0 C 15.5,0 20,4.5 20,10 L 17,10 C 17,6 14,3 10,3 Z" Height="9" Width="18" HorizontalAlignment="Center" Stretch="Fill" >
                                                <Path.Fill>
                                                    <LinearGradientBrush MappingMode="Absolute" StartPoint="400,240.414" EndPoint="420,240.414">
                                                        <LinearGradientBrush.Transform>
                                                            <MatrixTransform Matrix="-1,0,0,-1,420,245"/>
                                                        </LinearGradientBrush.Transform>
                                                        <GradientStop Offset="0.25" Color="#FF7F7F7F"/>
                                                        <GradientStop Offset="1" Color="#FF3F3F3F"/>
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                            </Path>
                                            <Path Data="F1 M17,0 C17,0 17,0 17,0 C17,4 14,7 10,7 C6,7 3,4 3,0 C3,0 3,0 3,0 L0,0 C0,0 0,0 0,0 C0,5 5,10 10,10 C15.5,10 20,5 20,0 C20,0 20,0 20,0 L17,0 z" Height="9" Width="18" HorizontalAlignment="Center" Stretch="Fill">
                                                <Path.Fill>
                                                    <LinearGradientBrush MappingMode="Absolute" StartPoint="489.5,230.5" EndPoint="509.5,230.5">
                                                        <LinearGradientBrush.Transform>
                                                            <MatrixTransform Matrix="1,0,-0,-1,-489.5,245"/>
                                                        </LinearGradientBrush.Transform>
                                                        <GradientStop Offset="0" Color="White"/>
                                                        <GradientStop Offset="0.75" Color="#FF7F7F7F"/>
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                            </Path>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </Borders:ClippingBorder>
                            <Borders:ClippingBorder x:Name="BackgroundAnimation" Background="Black" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Black" CornerRadius="4" IsTabStop="False"/>
                            <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="false" Opacity="0" RadiusY="4" RadiusX="4"/>
                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="4" RadiusX="4" StrokeThickness="1"/>
                        </Grid>
                    </Borders:OuterGlowBorder>
                </Grid>
            </ControlTemplate>
        </ResourceDictionary>
        
        
        
    </Application.Resources>
</Application>

    
    
    
